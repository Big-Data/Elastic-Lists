package eu.stefaner.elasticlists.test.testApp {	import flash.events.Event;
	import eu.stefaner.elasticlists.App;	import eu.stefaner.elasticlists.data.Facet;	import eu.stefaner.elasticlists.ui.DefaultGraphicsFactory;	import eu.stefaner.elasticlists.ui.appcomponents.ContentArea;	import eu.stefaner.elasticlists.ui.facetboxes.FacetBox;	import eu.stefaner.elasticlists.ui.facetboxes.FacetBoxContainer;	import eu.stefaner.elasticlists.ui.facetboxes.elasticlist.ElasticListBox;	import com.bit101.components.HBox;	import com.bit101.components.VBox;	import org.osflash.thunderbolt.Logger;	import flash.text.TextField;	/**	 * @author mo	 */	[SWF(backgroundColor="#DDDDDD", frameRate="31", width="1024", height="768")]	public class App extends eu.stefaner.elasticlists.App {		private var hBox : HBox;
		private var vBox : VBox;
		private var margin : Number = 15;		function App() {			super();			Logger.info("App constructed");		}		override protected function initDisplay() : void {						vBox = new VBox(this, margin, margin);			vBox.spacing = margin;						var tf : TextField = DefaultGraphicsFactory.getTitleTextField();			tf.text = "Elastic Lists test application";			tf.scaleX = tf.scaleY = 2;						vBox.addChild(tf);						hBox = new HBox(vBox, 0, 0);			hBox.spacing = margin * .33;						for each (var facet:Facet in model.facets) {								var f : FacetBoxContainer = new FacetBoxContainer(this);				var facetBox : FacetBox;				facetBox = new ElasticListBox();								facetBox.singleSelect = true;								f.init(facet, facetBox);				hBox.addChild(f);				f.width = 180;				f.height = 200;			}			contentArea = new ContentArea();			contentArea.init(this);			vBox.addChild(contentArea);						layout();		}		override protected function layout() : void {			hBox.draw();			vBox.draw();						contentArea.width = stage.stageWidth - margin * 2;			contentArea.height = stage.stageHeight - contentArea.getBounds(this).top - margin ;	
		}
	}}