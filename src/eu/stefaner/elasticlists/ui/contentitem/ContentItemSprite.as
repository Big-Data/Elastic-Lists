package eu.stefaner.elasticlists.ui.contentitem {	import eu.stefaner.elasticlists.ui.elements.InteractiveNodeSprite;	import flare.animate.Transitioner;	import flash.events.Event;	import flash.text.TextFieldAutoSize;	public class ContentItemSprite extends InteractiveNodeSprite {		public var defaultWidth : Number;		public var defaultHeight : Number;		public function ContentItemSprite(o : Object) {			super(o);		}		override protected function onStageInit(e : Event) : void {			super.onStageInit(e);			label = data.title;			if(!defaultWidth) defaultWidth = width;			if(!defaultHeight) defaultHeight = height;			title_tf.autoSize = TextFieldAutoSize.NONE;		};		//---------------------------------------		// GETTER / SETTERS		//---------------------------------------		override public function set height( h : Number ) : void { 			selectionMarker.height = bg.height = h;		}		override public function get height() : Number { 			return bg.height; 		}			override public function set width( w : Number ) : void { 			selectionMarker.width = bg.width = w;			title_tf.width = w - title_tf.x;		}		override public function get width() : Number { 			return bg.width; 		}		public function updateVisibility(t : Transitioner = null) : void {			t = Transitioner.instance(t);						if(data.filteredOut && visible) {				hide(t);			} else if (!data.filteredOut && !visible) {				show(t);			}		}		public function show(t : Transitioner = null) : void {			t = Transitioner.instance(t);			t.$(this).alpha = 1;						visible = true;						};		public function hide(t : Transitioner = null) : void {			t = Transitioner.instance(t);			t.$(this).alpha = 0;			t.$(this).visible = false;										};	}}